/*
 * To execute Java, please define "static void main" on a class
 * named Solution.
 *
 * If you need more classes, simply define them inline.
 */

/*
1. phone water to ocean
http://www.1point3acres.com/bbs/thread-141746-1-1.html
2. phone median
http://www.1point3acres.com/bbs/forum.php?mod=viewthread&tid=171676&extra=page%3D1%26filter%3Dsortid%26sortid%3D311%26searchoption%5B3046%5D%5Bvalue%5D%3D37%26searchoption%5B3046%5D%5Btype%5D%3Dradio%26sortid%3D311
3. phone closet N sum
4. onsite matrix
http://www.1point3acres.com/bbs/forum.php?mod=viewthread&tid=146537&extra=page%3D1%26filter%3Dsortid%26sortid%3D311%26searchoption%255B3046%255D%255Bvalue%255D%3D37%26searchoption%255B3046%255D%255Btype%255D%3Dradio&page=1
5. phone mini parser
http://www.1point3acres.com/bbs/forum.php?mod=viewthread&tid=138651&extra=page%3D1%26filter%3Dsortid%26sortid%3D311%26searchoption%5B3046%5D%5Bvalue%5D%3D37%26searchoption%5B3046%5D%5Btype%5D%3Dradio%26sortid%3D311
6. onsite socket 
http://www.1point3acres.com/bbs/forum.php?mod=viewthread&tid=148195&extra=page%3D1%26filter%3Dsortid%26sortid%3D311%26searchoption%5B3046%5D%5Bvalue%5D%3D37%26searchoption%5B3046%5D%5Btype%5D%3Dradio%26sortid%3D311
7. phone 不相邻子序列 （2015-4）house robber
http://www.1point3acres.com/bbs/forum.php?mod=viewthread&tid=129199&extra=page%3D1%26filter%3Dsortid%26sortid%3D311%26searchoption%5B3046%5D%5Bvalue%5D%3D37%26searchoption%5B3046%5D%5Btype%5D%3Dradio%26sortid%3D311
8. phone decode URL (2015-6)
http://www.1point3acres.com/bbs/forum.php?mod=viewthread&tid=131724&extra=page%3D1%26filter%3Dsortid%26sortid%3D311%26searchoption%5B3046%5D%5Bvalue%5D%3D37%26searchoption%5B3046%5D%5Btype%5D%3Dradio%26sortid%3D311
9. kdistance
http://buttercola.blogspot.com/2015/11/airbnb-k-edit-distance.html
10. onsite HilbertCurve
http://www.1point3acres.com/bbs/forum.php?mod=viewthread&tid=146537&extra=page%3D1%26filter%3Dsortid%26sortid%3D311%26searchoption%5B3046%5D%5Bvalue%5D%3D37%26searchoption%5B3046%5D%5Btype%5D%3Dradio%26sortid%3D311
11. onsite text justification
http://www.1point3acres.com/bbs/forum.php?mod=viewthread&tid=165457&extra=page%3D1%26filter%3Dsortid%26sortid%3D311%26searchoption%5B3046%5D%5Bvalue%5D%3D37%26searchoption%5B3046%5D%5Btype%5D%3Dradio%26sortid%3D311
12. onsite alien dictionary 
http://www.1point3acres.com/bbs/forum.php?mod=viewthread&tid=148195&extra=page%3D1%26filter%3Dsortid%26sortid%3D311%26searchoption%5B3046%5D%5Bvalue%5D%3D37%26searchoption%5B3046%5D%5Btype%5D%3Dradio%26sortid%3D311
13. onsite available time
http://www.1point3acres.com/bbs/forum.php?mod=viewthread&tid=158462&extra=page%3D1%26filter%3Dsortid%26sortid%3D311%26searchoption%5B3046%5D%5Bvalue%5D%3D37%26searchoption%5B3046%5D%5Btype%5D%3Dradio%26sortid%3D311
14. onsite boggle game
http://www.1point3acres.com/bbs/forum.php?mod=viewthread&tid=158462&extra=page%3D1%26filter%3Dsortid%26sortid%3D311%26searchoption%5B3046%5D%5Bvalue%5D%3D37%26searchoption%5B3046%5D%5Btype%5D%3Dradio%26sortid%3D311
15. onsite travel city
http://www.1point3acres.com/bbs/forum.php?mod=viewthread&tid=158462&extra=page%3D1%26filter%3Dsortid%26sortid%3D311%26searchoption%5B3046%5D%5Bvalue%5D%3D37%26searchoption%5B3046%5D%5Btype%5D%3Dradio%26sortid%3D311
// summarize 
http://buttercola.blogspot.com/search/label/Airbnb

*/
//1. phone water to ocean
/*class WtO{
  String[] map;
  public WtO(){};
  public void findOcean(int x, int y) {
    if (map == null || map.length == 0) {
      return;
    }
    int m = map.length;
    int len = map[0].length();
    char[][] c = new char[m][len];
    for (int i = 0; i < m; i++) {
      c[i] = map[i].toCharArray();
    }
    if (c[x][y] == 'L') {
      return;
    }
    Queue<Node> q = new LinkedList<Node>();
    q.offer(new Node(x, y));
    while (!q.isEmpty()) {
      Node n = q.poll();
      c[n.x][n.y] = 'O';
      if (n.x - 1 >= 0 && c[n.x - 1][n.y] == 'W') {
        q.offer(new Node(n.x - 1, n.y));
      }
      if (n.x + 1 < m && c[n.x + 1][n.y] == 'W') {
        q.offer(new Node(n.x + 1, n.y));
      } 
      if (n.y + 1 < len && c[n.x][n.y + 1] == 'W'){
        q.offer(new Node(n.x, n.y + 1));
      }
      if (n.y - 1 >= 0 && c[n.x][n.y - 1] == 'W') {
        q.offer(new Node(n.x, n.y - 1));
      }
    }
    for (int i = 0; i < m; i++) {
      map[i] = new String(c[i]);
    }
  }
  
  public void printMap() {
    for (int i = 0; i < map.length; i++) {
      System.out.println(map[i]);
    }
  }
}
class Node{
  int x;
  int y;
  public Node(int i, int j) {
    x = i;
    y = j;
  }
}

//3. phone closet N sum
// recursion
// http://blog.csdn.net/le119126/article/details/46382125
class ClosestNSum{
  public ClosestNSum(){};
  public Integer closestNsum(int[] num, int k, int target) {
    if (num.length == 0) {
      return null;
    }
    if (k < 2) {
      int diff = Integer.MAX_VALUE;
      for (int i = 0; i < num.length; i++) {
        diff = Math.min(diff, Math.abs(num[i] - target));
      }
      return diff;
    }
    Arrays.sort(num);
    return helper(0, num, k, target);
  }
  
  public int helper(int start, int[] num, int k, int target) {
    if (k == 2) {
      int i = start;
      int j = num.length - 1;
      int ret = num[i] + num[j];
      int sum = 0;
      while (i < j) {
        sum = num[i] + num[j];
        if (Math.abs(sum - target) < Math.abs(ret - target)) {
          ret = sum;
        }
        if (sum == target) {
          return sum;
        }
        if (sum > target) {
          i++;
        } else {
          j--;
        }
      }
      return ret;
    }
    int min = 0;
    for (int i = start; i < num.length - 2; i++) {
      int tmp_min = helper(i + 1, num, k - 1, target - num[start]);
      if (i == start) {
        min = tmp_min + num[i];
      } else {
        if (Math.abs(tmp_min + num[i] - target) < Math.abs(min - target)) {
          min = tmp_min + num[i];
        }
      }
    }
    return min;
  }
}


class Solution {
  public static void main(String[] args) {
    // WtO w = new WtO();
    // String[] map = new String[]{
    //   "WWWLLLW",
    //   "WWLLLWW",
    //   "WLLLLWW"  
    // };
    // w.map = map;
    // w.printMap();
    // w.findOcean(0, 1);
    // w.printMap();
    
    ClosestNSum cns = new ClosestNSum();
    int diff = cns.closestNsum(new int[]{-1, 2, 1, -4, 3}, 4, 1);
    System.out.println(diff);
  }
}
*/
public class Solution {
  public Integer decodeFind(String badEncString) {
    if (badEncString == null || badEncString.length() == 0) {
      return -1;
    }
     
    StringBuffer sb = new StringBuffer();
     
    return decodeFindHelper(0, sb, badEncString);
  }
   
  private Integer decodeFindHelper(int start, StringBuffer curr, String badEncString) {
    if (start == badEncString.length()) {
      String testEncStr = curr.toString();
      Integer result = decode(testEncStr);
       
      if (result != null) {
        return result;
      } else {
        return null;
      }
    }
     
    char c = badEncString.charAt(start);
    System.out.println(c);
    if (!Character.isLetter(c)) {
      curr.append(c);
      Integer result = decodeFindHelper(start + 1, curr, badEncString);
      if (result != null) {
        return result;
      }
      curr.deleteCharAt(curr.length() - 1);
    } else {
      // To lower case
      char lower = Character.toLowerCase(c);
      curr.append(lower);
      Integer result = decodeFindHelper(start + 1, curr, badEncString);
      if (result != null) {
        return result;
      }
      curr.deleteCharAt(curr.length() - 1);
       
      // To upper case
      char upper = Character.toUpperCase(c);
      curr.append(upper);
      result = decodeFindHelper(start + 1, curr, badEncString);
      if (result != null) {
        return result;
      }
      curr.deleteCharAt(curr.length() - 1);
    }
     
    return null;
  }
   
  public Integer decode(String testEncStr) {
    String truth = "kljJJ324hijkS_";
     
    if (testEncStr.equals(truth)) {
      return 848662;
    } else {
      return null;
    }
  }
   
  public static void main(String[] args) {
    Solution solution = new Solution();
    String badEncStr = "kLjjj324hijks_";
    Integer result = solution.decodeFind(badEncStr);
     
    System.out.println(result);
  }
}



From Glassdoor：
1.      Given a list ofstrings, return all pairs of strings that can make a palindrome.  高频
2.      TextJustification, Alien Dictionary  
3.      How fast canyou parse strings?  
The problem I was giveninvolved a bunch of ugly string data parsing and using a heuristic to modifythe data in a certain way. It was an easy problem, but they wanted a fullyworking solution within the short time limit. I couldn't finish it in time.Pick a language that has as little verbosity as possible and don't botherengaging with the interviewer because they don't care to speak with you. Theyjust want to see how fast you can code.
4.       Write a CSV parser.  Parse an escaped string into csvformat. 高频
5.       Return the coins combination with the minimum number ofcoins.Time complexity O(MN), where M is the target value and N is the number ofdistinct coins. Space complexity O(M).  
6.       I had a phone screen question involving examination ofsubsets.  
7.       Check top 10 questions on leetcode  
8.       Implement a circular buffer using an array.
http://stackoverflow.com/questions/590069/how-would-you-code-an-efficient-circular-buffer-in-java-or-c-sharp
9.      Provide a set of positiveintegers (an array of integers). Each integer represent number of nights userrequest on Airbnb.com. If you are a host, you need to design and implement analgorithm to find out the maximum number a nights you can accommodate. Theconstrain is that you have to reserve at least one day between each request, sothat you have time to clean the room.

Example:
1) Input: [1, 2, 3]===&gt; output: 4, because you will pick 1 and 3
2) input: [5,1, 2, 6] ===&gt; output: 11, because you will pick 5 and 6
3) input: [5,1, 2, 6, 20, 2] ===&gt; output: 27, because you will pick 5, 2, 20  
10.  Given a set of numbersin an array which represent number of consecutive days of AirBnB reservationrequested, as a host, pick the sequence which maximizes the number of days ofoccupancy, at the same time, leaving atleast 1 day gap in between bookings forcleaning. Problem reduces to finding max-sum of non-consecutive array elements.. 鐗涗汉浜戦泦,涓€浜╀笁鍒嗗湴

// [5, 1, 1, 5] => 10. 鍥磋鎴戜滑@1point 3 acres
The above array would represent an examplebooking period as follows -
// Dec 1 - 5
// Dec 5 - 6
// Dec 6 - 7
// Dec 7 – 12
The answer would be to pick dec 1-5 (5 days)and then pick dec 7-12 for a total of 10 days of occupancy, at the same time,leaving atleast 1 day gap for cleaning between reservations..鐣欏璁哄潧-涓€浜�-涓夊垎鍦�

Similarly,
// [3, 6, 4] => 7
// [4, 10, 3, 1, 5] => 15  
11.   Boggle implementation  (word search I, II)
12.   Given a dictionary, and a matrix of letters, find all thewords in the matrix that are in the dictionary. (Going across, down ordiagonally)  

What SQL columns you should index and how would you change     the indexing in different lookup scenarios? 
What can you teach me in a few minutes?  
find all the     combinations of a string in lowercase and uppercase. For example, string     "ab" -&gt; "ab", "Ab", "aB",     "AB". So, you will have 2^n (n = number of chars in the string)     output strings. The goal is for you to test each of these string and see     if it match a hidden string。. 1point3acres.com/bbs
Implement a     simple regex parser which, given a string and a pattern, returns a booleanindicating whether the     input matches the pattern. By simple, we mean that the regex can only     contain special character: * (star), . (dot), + (plus). The star means     what you'd expect, that there will be zero or more of previous character     in that place in the pattern. The dot means any character for that     position. The plus means one or more of previous character in that place     in the pattern.  
Tell me about why you want to work here.  
Find all words from a dictionary that are x edit     distance away.  
Store a set of sudden-death tournament results in a     compact format (eg. a bit array) and a set of predicted match results     (also in a bit array). Score the predictions, giving one point per     correctly guessed match, without unpacking the bit array into a more     convenient format (ie. you have to traverse the tree in-place).  
20.   Lots of treequestions (implement a BST, score sudden-death tournament results with a minimalbinary tree data structure, encode an alien dictionaryusing a tree and then produce a dictionary using topological traversal), and a"rebuild Twitter from the ground up" scaling/architecture question.
. 鍥磋鎴戜滑@1point 3 acres
Describe what happens when you enter a url in the web     browser  
Sort a list of numbers in which each number is at a     distance k from its actual position  . from: 1point3acres.com/bbs 
You have a plain with lots of rectangles on it, find out     how many of them intersect  
Binary search tree  . from: 1point3acres.com/bbs 
From MITBBS
1. http://www.mitbbs.com/article_t/JobHunting/32309663.html
regexmatch, slightly complicated version of http://leetcode.com/2011/09/regular-expression-matching.html
find maxium square inside a sqaure, similar tohttp://stackoverflow.com/questio ... argest-square-block

edit distance
2.       http://www.mitbbs.com/article_t/JobHunting/32864407.html
3.       http://www.mitbbs.com/article_t/JobHunting/32779809.html
alien dictionary，我还被问了两轮这题。。。
还有meetingroom2
4.       http://www.mitbbs.com/article_t/JobHunting/33129803.html
电面二话不说上来就做题
一个餐馆，菜单上各种食物价格如下
A， $ X.XX
B， $ Y.YY
C， $ Z.ZZ
D,  $ ...

问现在一个人有一定数额的钱，比如 $MM.MM，如何点菜才能把钱全部花完？ 鏉ユ簮涓€浜�.涓夊垎鍦拌鍧�. 
面试官要求列出所有可能的组合-google 1point3acres
我用了recursive的方法，写出来了
但是在比较 floatnumber的时候，细节没有处理好
直接比较 X.XX ==Y.YY 会出现错误，所以必须要做差来比较
经面试官提醒改了过来
然后周一被通知挂了

这题除了用recursive方法，有更好的解法吗？DP?
From 一亩三分地
http://www.1point3acres.com/bbs/forum.php?mod=forumdisplay&fid=145&sortid=311&searchoption[3046][value]=37&searchoption[3046][type]=radio&sortid=311&filter=sortid&page=1
1.      http://www.1point3acres.com/bbs/forum.php?mod=viewthread&tid=176102&extra=page%3D1%26filter%3Dsortid%26sortid%3D311%26searchoption%5B3046%5D%5Bvalue%5D%3D37%26searchoption%5B3046%5D%5Btype%5D%3Dradio%26sortid%3D311
RT，白人面试官，感觉非常冷，啥都不问，上来直接做题。题目是2D iterator，加一个remove。我10多min就写完了，但是面试官说能run，但是design不太好，让我换一种方法。提示利用iterator的remove方法，我对iterator的remove方法不是很熟，我说能不能查api，他说可以。
然后我就查api，然后lz对api里说的看不大懂，然后面试官帮忙run了一个case，然后我懂了，然后就改，然后又出了几个很傻逼的bug，最后面试官说再给你1min调，然后lz终于调出来。然后面试官说great。（感觉安慰我）。然后我就问问题，但是很傻逼的是，我问的问题和那个面试官做的东西不一样，面试官不懂怎么回答，然后我就让他讲了一下他的工作，然后我又问了2个。然后就Bye了。
2.      http://www.1point3acres.com/bbs/forum.php?mod=viewthread&tid=165457&extra=page%3D1%26filter%3Dsortid%26sortid%3D311%26searchoption%5B3046%5D%5Bvalue%5D%3D37%26searchoption%5B3046%5D%5Btype%5D%3Dradio%26sortid%3D311
首先是三个技术面：
1） AlienDictionary
2） Text Justification. more info on 1point3acres.com
3） 写echoTCP client， 向面试官的server发请求， 读回数据。地里比较少人说这种， 我来详细说一下， 情境是这样的： 想象你开车， 踩下油门，车会加速，放开油门，车会减速。 client向server发的请求有以下2种： （a）STATUS --表示查询现在车的速度和踩下踏板的压力； （b）THROTTLE 50.1 --- 这条指令是“THROTTLE” 加上一个数字， 表示我现在将踩油门的压力调为50.1 .鐣欏璁哄潧-涓




首先是三个技术面：
1） Alien Dictionary
2） Text Justification
3） 写echo TCP client， 向面试官的server发请求， 读回数据。地里比较少人说这种， 我来详细说一下， 情境是这样的： 想象你开车， 踩下油门，车会加速，放开油门，车会减速。 client向server发的请求有以下2种： （a）STATUS --表示查询现在车的速度和踩下踏板的压力； （b）THROTTLE 50.1 --- 这条指令是“THROTTLE” 加上一个数字， 表示我现在将踩油门的压力调为50.1 


EXAMPLE: 比如在telnet中.1point3acres缃�
STATUS 
0.0 0.0     (这行是server返回的， 第一个数字表示压力，第二个数字表示速度)  
THROTTLE 50.1 (这个指令发出 server没有返回)
STATUS
50.1 3.75   (可以看到速度在缓慢上升)
STATUS     (过几秒后，你又发STATUS指令过去)
50.1 15.98   (速度依旧上升。。。)

对就是这样，像是简单物理实验。

写完TCP client后，要求是写一个方法将速度控制到达一个target speed. more info on 1point3acres.com

最后一个问题是求这个 delta力 和 delta速度 之间的函数关系。。。。。。。。醉了。我物理还给老师了。。。。。。时间不够了

希望可以帮助到大家！！！



-google 1point3acres
补充内容 (2016-1-14 00:55):
补充一下core value面：. From 1point 3acres bbs
1）what bring you to airbnb? . 1point3acres.com/bbs
2) what can you teach your co-workers after you get in?
3) describe a person whom you admire most
4) describe your experience with airbnb
.鐣欏璁哄潧-涓€浜�-涓夊垎鍦�
补充内容 (2016-1-14 00:55):
5) where have you been to?
6) what will you do if you win a lottery such as Powerball?
7) what is the biggest fear in your life?
8) how do describe Airbnb to a people back to 2003?
.1point3acres缃�
补充内容 (2016-1-14 00:56):
9) if you have a book that writes about your whole life, will you read it? why?
10) if you have a time machine, and you can either go back or go forth, will you choose to go back or to go forth?. 1point 3acres 璁哄潧

补充内容 (2016-1-14 00:56):
11) among all the features of airbnb, what do you want to improve?

补充内容 (2016-1-14 00:57):
就这么多了~想起来再加~大家觉得有用就给我加米哈

补充内容 (2016-1-14 12:59):. 1point 3acres 璁哄潧
12) 描述一件你当时觉得非常risky的事情，你是怎么做的，结果如何
